c
q
Person.where("first_name LIKE 'Vader%'").or(Person.where("last_name LIKE 'Vader%'")).count
Person.where("first_name ILIKE 'Vader'").or(Person.where("last_name ILIKE 'Vader'")).count
Person.where("first_name LIKE 'Vader'").or(Person.where("last_name LIKE 'Vader'")).count
Person.where("first_name LIKE 'Vader%'").or(Person.where("last_name LIKE 'Vader%'")).count
Person.where("first_name LIKE 'vader%'").or(Person.where("last_name LIKE 'vader%'")).count
Person.where("first_name LIKE 'vader%'").or(Person.where("last_name LIKE 'vader%'"))
c
n
q
Person.includes(:affiliations)
Person.includes(:affiliation)
Person.include(:affiliation)
People.include(:affiliation)
People.include(:affiliations)
People.includes(:affiliations)
Person.includes(:affiliations)
People.includes(:affiliations)
c
n
c
n
c
n
q
@people
n
q
Person.joins([:affiliations, :locations]).where(affiliations: {affiliation_name: 'Hutt Clan'}).count
Person.joins([:affiliations, :locations]).where(affiliations: {affiliation_name: 'Sith'}).count
Person.joins([:affiliations, :locations]).where(affiliations: {affiliation_name: 'Sith'}).inspect
Person.joins([:affiliation, :location]).where(affiliations: {affiliation_name: 'Sith'}).inspect
Person.joins([:affiliation, :location]).where(affiliations: {affiliation_name: 'Sith'})
Person.joins([:affiliation, :location]).where(affiliations: {affiliation_name: 'Sith'}
Person.joins([:affiliation, :location])
People.joins([:affiliation, :location])
Affiliation.joins(:person)
Affiliation.joins(:person).to_a
Affiliations.joins(:person).to_a
Person.left_joins(:affiliations).to_a
Person.joins(:affiliations).to_a
Person.joins(:association).to_a
People.joins(:associations).to_a
People.all.joins(:associations).to_a
Person.all.joins(:associations).to_a
Person.all.joins(:associations)
Person.joins(:associations)
Person.join(:associations)
People.join(:associations)
c
affiliation
c
affiliation
q
c
affiliation
n
affiliation_string
n
q
affiliations.map {|affiliation| affiliation.affiliation_name }.join(", ")
affiliations.map {|affiliation| affiliation.affiliation_name }.join(" ")
affiliations.map {|affiliation| affiliation.affiliation_name.join(", ") }
affiliations.map {|affiliation| affiliation.affiliation_name }
affiliations.each.pluck["affiliation_name"]
affiliations["affiliation_name"]
affiliations.affiliation_name
affiliations
n
q
self.affiliations["affilation_name"]
self.affiliations.affilation_name
self.affiliations
affiliation_string.to_json
affiliation_string
q
affiliation
q
@people_json.to_a
@people_json[0]
@people_json
c
q
c
n
q
c
@people
q
params
c
request.fullpath
request.original_fullpath
request.original_url
params[:offset]
params
c
@people
c
n
Affiliation.all
c
nc
n
c
n
Affiliation
c
n
Affiliation
Location
c
q
Location
q
Location
c
q
Location
n
exit
Location
exit
Location
exit
Affiliation
c
n
c
n
c
n
c
n
nn
n
q
Person.destroy_all
self
self.people
self.person
n
c
n
nn
n
q
self.people
self.persons
self.person
n
c
n
q
self
self.people
self.person
self.create!({affiation_name: affiliation_value.titleize})
self.people.create!({affiation_name: affiliation_value.titleize})
self.person.create!({affiation_name: affiliation_value.titleize})
n
c
n
c
n
affiliation_values
n
c
n
c
n
c
n
q
new_person.affiliations
c
n
c
Person.destroy_all
q
new_person.affiliations
new_person.affliation
c
n
c
n
new_person
c
n
c
nc
n
q
Person.all
Person.destroy_all
Person.destro_all
Person.all
new_person.save!
n
q
new_person
new_person.save!
new_person.save
n
Person.all
People.all
c
n
c
n
new_person
n
row
n
c
n
c
n
c
n
last_name
n
first_name
split_name
person_name
n
q
row["Affiliations"]
row["affiliations"]
row
row["affiliation"]
row["affilliation"]
row["affilliation]
c
row
n
q
File.open(params[:file])
params
c
n
exit
params
